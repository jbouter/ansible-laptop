---

- name: Create "docker" group
  ansible.builtin.group:
    name: docker
    state: present
    system: yes

- name: Configure passwordless sudo for wireguard commands
  ansible.builtin.copy:
    dest: /etc/sudoers.d/wireguard
    owner: root
    group: root
    mode: '0440'
    content: |
      # Allow members of group sudo/wheel to execute wireguard commands
      Cmnd_Alias WIREGUARD = /usr/bin/wg show, \
                              /usr/bin/wg-quick up wg[0-9], \
                              /usr/bin/wg-quick down wg[0-9]

      %sudo ALL = NOPASSWD: WIREGUARD
      %wheel ALL = NOPASSWD: WIREGUARD

- name: Configure passwordless sudo for fwupdmgr commands
  ansible.builtin.copy:
    dest: /etc/sudoers.d/fwupd
    owner: root
    group: root
    mode: '0440'
    content: |
      # Allow members of group sudo/wheel to execute fwupdmgr commands
      Cmnd_Alias FWUPD = /usr/bin/fwupdmgr update, \
                         /usr/bin/fwupdmgr upgrade, \
                         /usr/bin/fwupdmgr refresh

      %sudo ALL = NOPASSWD: FWUPD
      %wheel ALL = NOPASSWD: FWUPD

- name: Configure passwordless sudo for flatpak commands
  ansible.builtin.copy:
    dest: /etc/sudoers.d/flatpak
    owner: root
    group: root
    mode: '0440'
    content: |
      # Allow members of group sudo/wheel to execute flatpak commands
      Cmnd_Alias FLATPAK = /usr/bin/flatpak update, \
                           /usr/bin/flatpak install *, \
                           /usr/bin/flatpak uninstall *

      %sudo ALL = NOPASSWD: FLATPAK
      %wheel ALL = NOPASSWD: FLATPAK

- name: Configure passwordless sudo for pkcon commands
  ansible.builtin.copy:
    dest: /etc/sudoers.d/pkcon
    owner: root
    group: root
    mode: '0440'
    content: |
      # Allow members of group sudo/wheel to execute pkcon commands
      Cmnd_Alias PKCON = /usr/bin/pkcon refresh, \
                         /usr/bin/pkcon update *, \
                         /usr/bin/pkcon install *, \
                         /usr/bin/pkcon remove *, \
                         /usr/bin/pkcon offline-trigger, \
                         /usr/bin/pkcon get-updates

      %sudo ALL = NOPASSWD: PKCON
      %wheel ALL = NOPASSWD: PKCON

- name: Install bash completion for git
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
    dest: /etc/bash_completion.d/git-completion.bash
    mode: '0640'
    owner: root
    group: root

- name: Configure bashrc for the user on Debian
  ansible.builtin.template:
    src: bashrc.j2
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'

- name: Configure bash.d for the user
  become: yes
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: https://github.com/jbouter/bash.d.git
    dest: "/home/{{ username }}/.config/bash.d"
    version: main

- name: Configure profile for the user
  ansible.builtin.copy:
    src: profile
    dest: "/home/{{ username }}/.profile"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'

- name: Configure bashrc for root on Debian
  ansible.builtin.template:
    src: bashrc.j2
    dest: /root/.bashrc
    owner: root
    group: root
    mode: '0644'

- name: Configure config directory for root
  ansible.builtin.file:
    path: /root/.config
    state: directory
    owner: root
    group: root
    mode: '0750'

- name: Configure bash.d for root
  ansible.builtin.git:
    repo: https://github.com/jbouter/bash.d.git
    dest: "/root/.config/bash.d"
    version: main

- name: Configure profile for root
  ansible.builtin.copy:
    src: profile
    dest: "/root/.profile"
    owner: root
    group: root
    mode: '0644'

- name: Ensure user vimrc has been removed
  ansible.builtin.file:
    dest: "/home/{{ username }}/.vimrc"
    state: absent

- name: Clone vim repository to user
  become: yes
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: https://github.com/roaldnefs/.vim.git
    dest: "/home/{{ username }}/.vim"
    version: main
  notify:
    - Install vim repository

- name: Ensure root vimrc has been removed
  ansible.builtin.file:
    dest: /root/.vimrc
    state: absent

- name: Configure vim for root
  ansible.builtin.file:
    src: "/home/{{ username }}/.vim"
    dest: /root/.vim
    owner: root
    group: root
    state: link

- name: Check if user's git config exists
  ansible.builtin.stat:
    path: "/home/{{ username }}/.gitconfig"
  register: stat_user_gitconfig

- name: Configure git for user
  ansible.builtin.template:
    src: gitconfig.j2
    dest: "/home/{{ username }}/.gitconfig"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'
  when: not stat_user_gitconfig.stat.exists

- name: Configure local directories for user
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'
  loop:
    - "/home/{{ username }}/.local"
    - "/home/{{ username }}/.local/bin"
    - "/home/{{ username }}/.local/share"
    - "/home/{{ username }}/.local/share/neofetch"
