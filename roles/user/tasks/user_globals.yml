---

- name: create "docker" group
  group:
    name: docker
    state: present
    system: yes

- name: configure passwordless sudo for wireguard commands
  copy:
    dest: /etc/sudoers.d/wireguard
    owner: root
    group: root
    mode: '0440'
    content: |
      #Allow members of group sudo to execute wireguard commands
      Cmnd_Alias WIREGUARD = /usr/bin/wg show, \
                              /usr/bin/wg-quick up wg0, \
                              /usr/bin/wg-quick down wg0

      %sudo ALL = NOPASSWD: WIREGUARD
      %wheel ALL = NOPASSWD: WIREGUARD

- name: configure bashrc for the user
  template:
    src: bashrc.j2
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'

- name: configure bash_aliases for the user
  copy:
    src: bash_aliases
    dest: "/home/{{ username }}/.bash_aliases"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'

- name: configure bashrc for root
  template:
    src: bashrc.j2
    dest: "/root/.bashrc"
    owner: root
    group: root
    mode: '0644'

- name: configure bash_aliases for root
  copy:
    src: bash_aliases
    dest: "/root/.bash_aliases"
    owner: root
    group: root
    mode: '0644'

- name: ensure user vimrc has been removed
  file:
    dest: "/home/{{ username }}/.vimrc"
    state: absent

- name: clone vim repository to user
  become: yes
  become_user: "{{ username }}"
  git:
    repo: https://github.com/roaldnefs/.vim.git
    dest: "/home/{{ username }}/.vim"
    version: main
  notify:
    - install vim repository

- name: ensure root vimrc has been removed
  file:
    dest: /root/.vimrc
    state: absent

- name: configure vim for root
  file:
    src: "/home/{{ username }}/.vim"
    dest: /root/.vim
    owner: root
    group: root
    state: link

- name: check if user's git config exists
  stat:
    path: "/home/{{ username }}/.gitconfig"
  register: stat_user_gitconfig

- name: configure git for user
  template:
    src: gitconfig.j2
    dest: "/home/{{ username }}/.gitconfig"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'
  when: not stat_user_gitconfig.stat.exists

- name: check if user rofi configuration dir exists
  stat:
    path: "/home/{{ username }}/.config/rofi"
  register: stat_user_rofi_configdir

- name: create rofi config directory
  file:
    path: "/home/{{ username }}/.config/rofi"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0775'
  when: not stat_user_rofi_configdir.stat.exists

- name: configure rofi for user
  copy:
    src: rofi_config.rasi
    dest: "/home/{{ username }}/.config/rofi/config.rasi"
    force: no
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'

- name: configure local directories for user
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'
  loop:
    - "/home/{{ username }}/.local"
    - "/home/{{ username }}/.local/bin"
    - "/home/{{ username }}/.local/share"
    - "/home/{{ username }}/.local/share/neofetch"

- name: configure neofetch merlin theme
  copy:
    src: neofetch_merlin
    dest: "/home/{{ username }}/.local/share/neofetch/merlin.txt"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0644'

- name: install passmenu for user
  copy:
    src: passmenu
    dest: "/home/{{ username }}/.local/bin/passmenu"
    force: no
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0755'
